version: "3.2"
services:
  zookeeper1:
    hostname: zookeeper1
    image: zookeeper  
#wurstmeister/zookeeper:latest

##    networks:
##      zookeeper-kafka-net:
##        ipv4_address: 10.1.3.71
    ports:
      - 12181:2181
      - 12888:2888
      - 13888:3888
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
#    restart: always

  zookeeper2:
    hostname: zookeeper2
    image: zookeeper
# wurstmeister/zookeeper:latest
##    networks:
##      zookeeper-kafka-net:
##        ipv4_address: 10.1.3.72
    ports:
      - 22181:2181
      - "22888:2888"
      - "23888:3888"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
#    restart: always

  zookeeper3:
    hostname: zookeeper3
    image: zookeeper
# wurstmeister/zookeeper:latest
##    networks:
##      zookeeper-kafka-net:
##        ipv4_address: 10.1.3.73
    ports:
      - 32181:2181
      - "32888:2888"
      - "33888:3888"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
#    restart: always

  kafka:
    hostname: kafka
#    container_name: kafka0
    image: wurstmeister/kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - "9094:9094"

    environment:
      TZ: "Asia/Shanghai" 
#      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_HOST_NAME: 139.9.236.166
      KAFKA_PORT: 9094
#      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://139.9.236.166:9094
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  kafka1:
    hostname: kafka1
    image: wurstmeister/kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - "9095:9095"
    environment:
      TZ: "Asia/Shanghai"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_HOST_NAME: 139.9.236.166
      KAFKA_PORT: 9095

#  kafka2:
#    image: wurstmeister/kafka:latest
#    depends_on:
#      - zookeeper1
#      - zookeeper2
#      - zookeeper3
#    ports:       #long format must be above version 3.2
#      - target: 9097
#        published: 9097
#        protocol: tcp
#        mode: host # 'ingress' or 'host' for one instance per host
#    environment:
#      TZ: "Asia/Shanghai"
#      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 3"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9097
#      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9097
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

  kafka-manager:
    image: sheepkiller/kafka-manager            # 如果要安装web管理工具可以同时安装这个，最后通过苏主机IP的9000端口进行访问，例如172.31.148.174:9000
    environment:
      ZK_HOSTS: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      APPLICATION_SECRET: "letmein"
    ports:
      - "9005:9000"
#    expose:
#      - "9000"
    depends_on:
#      - kafka2
      - kafka1
      - kafka
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == manager    

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8077:8080"
    restart: always
    depends_on:
#      - kafka2
      - kafka1
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=cluster_0
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181



  jobmanager:
    image: flink:1.11.2 #latest
    depends_on:
      - kafka
      - kafka1
    ports:
      - "18081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager        

  taskmanager:
    image: flink:1.11.2 #latest
    depends_on:
      - jobmanager
    command: taskmanager
    deploy:
      replicas: 2
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 5  


##networks:
##  zookeeper-kafka-net:
##    driver: overlay
##    ipam:
##      config: 
##        - subnet: 10.1.3.0/24

##    internal: true

